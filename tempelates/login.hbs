<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login - Quizer</title>
    <!-- Import SF Pro Display font for iOS-like typography -->
    <link href="https://fonts.googleapis.com/css2?family=SF+Pro+Display:wght@400;500;600&display=swap" rel="stylesheet">
    <style>
        /* Reset default browser styles */
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'SF Pro Display', -apple-system, BlinkMacSystemFont, sans-serif;
        }

        /* Main container styling */
        body {
            background-color: #f5f5f7; /* iOS light gray background */
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 20px;
        }

        /* Card container for the login form */
        .container {
            background: white;
            padding: 2rem;
            border-radius: 20px; /* iOS-style rounded corners */
            box-shadow: 0 8px 30px rgba(0, 0, 0, 0.12); /* Subtle shadow for depth */
            width: 100%;
            max-width: 400px;
            animation: fadeIn 0.5s ease-out; /* Smooth entrance animation */
        }

        /* Entrance animation keyframes */
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }

        /* Header section styling */
        .header {
            text-align: center;
            margin-bottom: 2rem;
        }

        .header h1 {
            color: #1d1d1f; /* iOS dark text color */
            font-size: 2rem;
            font-weight: 600;
            margin-bottom: 0.5rem;
        }

        .header p {
            color: #86868b; /* iOS secondary text color */
            font-size: 1rem;
        }

        /* Form group styling */
        .form-group {
            margin-bottom: 1.5rem;
        }

        .form-group label {
            display: block;
            margin-bottom: 0.5rem;
            color: #1d1d1f;
            font-size: 0.9rem;
            font-weight: 500;
        }

        /* Input field styling */
        .form-group input {
            width: 100%;
            padding: 1rem;
            border: 1px solid #d2d2d7; /* iOS light border color */
            border-radius: 12px;
            font-size: 1rem;
            transition: all 0.3s ease;
            background: #f5f5f7; /* iOS input background color */
        }

        /* Input focus state */
        .form-group input:focus {
            outline: none;
            border-color: #0071e3; /* iOS blue accent color */
            box-shadow: 0 0 0 4px rgba(0, 113, 227, 0.1); /* iOS-style focus ring */
        }

        /* Submit button styling */
        .submit-btn {
            width: 100%;
            padding: 1rem;
            background: #0071e3; /* iOS blue button color */
            color: white;
            border: none;
            border-radius: 12px;
            font-size: 1rem;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        /* Button hover state */
        .submit-btn:hover {
            background: #0077ed;
            transform: translateY(-1px); /* Subtle lift effect */
        }

        /* Button active state */
        .submit-btn:active {
            transform: translateY(0);
        }

        /* Sign up link section */
        .signup-link {
            text-align: center;
            margin-top: 1.5rem;
        }

        .signup-link a {
            color: #0071e3;
            text-decoration: none;
            font-weight: 500;
            transition: color 0.3s ease;
        }

        .signup-link a:hover {
            color: #0077ed;
        }

        /* Error message styling */
        .error-message {
            background: #ff3b30; /* iOS red color for errors */
            color: white;
            padding: 1rem;
            border-radius: 12px;
            margin-bottom: 1rem;
            font-size: 0.9rem;
            display: none; /* Hidden by default */
        }

        /* Mobile responsiveness */
        @media (max-width: 480px) {
            .container {
                padding: 1.5rem;
            }

            .header h1 {
                font-size: 1.75rem;
            }
        }
    </style>
</head>
<body>
    <!-- Main container -->
    <div class="container">
        <!-- Header section -->
        <div class="header">
            <h1>Welcome Back</h1>
            <p>Sign in to continue</p>
        </div>
        
        <!-- Error message container (hidden by default) -->
        <div class="error-message" id="error-message"></div>
        
        <!-- Login form -->
        <form action="/login" method="post" id="loginForm">
            <!-- Username input -->
            <div class="form-group">
                <label for="name">Username</label>
                <input type="text" id="name" name="name" placeholder="Enter your username" required>
            </div>
            
            <!-- Password input -->
            <div class="form-group">
                <label for="password">Password</label>
                <input type="password" id="password" name="password" placeholder="Enter your password" required>
            </div>
            
            <!-- Submit button -->
            <button type="submit" class="submit-btn">Sign In</button>
        </form>
        
        <!-- Sign up link -->
        <div class="signup-link">
            Don't have an account? <a href="/signup">Sign up</a>
        </div>
    </div>

    <script>
        // Form submission handler
        document.getElementById('loginForm').addEventListener('submit', function(e) {
            // Update button state during submission
            const submitBtn = this.querySelector('.submit-btn');
            submitBtn.textContent = 'Signing in...';
            submitBtn.style.opacity = '0.7';
            submitBtn.style.cursor = 'not-allowed';
        });

        // Error message handler
        const urlParams = new URLSearchParams(window.location.search);
        const error = urlParams.get('error');
        if (error) {
            const errorMessage = document.getElementById('error-message');
            errorMessage.style.display = 'block';
            errorMessage.textContent = decodeURIComponent(error);
        }
    </script>
</body>
</html>